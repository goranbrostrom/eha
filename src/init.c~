#include <R_ext/RS.h>
#include <stdlib.h> // for NULL
#include <R_ext/Rdynload.h>

/* FIXME: 
   Check these declarations against the C/Fortran source code.
*/

/* .C calls */
extern void aftexpsup(void *, void *, void *, void *, void *,
		      void *, void *, void *, void *, void *,
		      void *, void *, void *, void *, void *,
		      void *, void *);
extern void aftregGomp(void *, void *, void *, void *, void *,
		       void *, void *, void *, void *, void *,
		       void *, void *, void *, void *, void *, void *);
extern void aftsup(void *, void *, void *, void *, void *, void *,
		   void *, void *, void *, void *, void *, void *,
		   void *, void *, void *, void *);
extern void d_loglik_ph(void *, void *, void *, void *, void *,
			void *, void *, void *, void *, void *,
			void *, void *);
extern void d2_loglik_ph(void *, void *, void *, void *, void *,
			 void *, void *, void *, void *, void *,
			 void *, void *);
extern void expsup(void *, void *, void *, void *, void *, void *,
		   void *, void *, void *, void *, void *, void *,
		   void *, void *, void *, void *, void *, void *,
		   void *, void *, void *, void *);
extern void frail_ml(void *, void *, void *, void *, void *, void *,
		     void *, void *, void *, void *, void *, void *,
		     void *, void *, void *, void *, void *, void *,
		     void *, void *, void *, void *, void *, void *,
		     void *, void *, void *);
extern void glmm_boot(void *, void *, void *, void *, void *, void *,
		      void *, void *, void *, void *, void *, void *,
		      void *, void *, void *, void *, void *, void *,
		      void *, void *, void *, void *, void *, void *);
extern void glmm_boot0(void *, void *, void *, void *, void *, void *,
		       void *, void *, void *, void *, void *, void *,
		       void *, void *, void *, void *);
extern void glmm_ml(void *, void *, void *, void *, void *, void *,
		    void *, void *, void *, void *, void *, void *,
		    void *, void *, void *, void *, void *, void *,
		    void *, void *, void *, void *, void *, void *,
		    void *, void *, void *, void *, void *, void *,
		    void *, void *);
extern void loglik_ph(void *, void *, void *, void *, void *, void *,
		      void *, void *, void *, void *, void *, void *);
extern void phexpsup(void *, void *, void *, void *, void *, void *,
		     void *, void *, void *, void *, void *, void *,
		     void *, void *, void *, void *, void *, void *,
		     void *, void *, void *, void *, void *, void *, void *);
extern void phsup(void *, void *, void *, void *, void *, void *, void *,
		  void *, void *, void *, void *, void *, void *, void *,
		  void *, void *, void *, void *, void *, void *, void *,
		  void *, void *, void *, void *, void *);
extern void risk_get(void *, void *, void *, void *, void *, void *, void *,
		     void *, void *, void *, void *, void *, void *, void *,
		     void *);
extern void sizes(void *, void *, void *, void *, void *, void *, void *,
		  void *, void *, void *, void *);
extern void sup(void *, void *, void *, void *, void *, void *, void *,
		void *, void *, void *, void *, void *, void *, void *,
		void *, void *, void *, void *, void *, void *, void *,
		void *, void *, void *, void *, void *, void *, void *,
		void *, void *);
extern void weibsup(void *, void *, void *, void *, void *, void *,
		    void *, void *, void *, void *, void *, void *,
		    void *, void *, void *, void *, void *, void *,
		    void *, void *, void *, void *, void *, void *, void *);

/* .Fortran calls */
/* Where is 'bootcox'???
extern void F77_NAME(bootcox)(void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *, void *);
*/
extern void F77_NAME(chek)(void *, void *, void *, void *, void *, void *,
			   void *, void *);
extern void F77_NAME(cleanup)(void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *);
extern void F77_NAME(geomsup)(void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *, void *);
extern void F77_NAME(ghq)(void *, void *, void *, void *);
extern void F77_NAME(hazards)(void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *);
extern void F77_NAME(martres)(void *, void *, void *, void *, void *,
			      void *, void *, void *, void *, void *,
			      void *);
/*
extern void F77_NAME(phfuncnull)(void *, void *, void *, void *, void *,
				 void *, void *, void *, void *, void *,
				 void *, void *, void *);
*/
extern void F77_NAME(split)(void *, void *, void *, void *, void *,
			    void *, void *, void *, void *, void *);
extern void F77_NAME(wfunc)(void *, void *, void *, void *, void *,
			    void *, void *, void *, void *, void *,
			    void *, void *, void *, void *, void *, void *);
extern void F77_NAME(wfuncnull)(void *, void *, void *, void *, void *,
				void *, void *, void *, void *, void *,
				void *, void *, void *);

static const R_CMethodDef CEntries[] = {
    {"aftexpsup",    (DL_FUNC) &aftexpsup,    17},
    {"aftregGomp",   (DL_FUNC) &aftregGomp,   16},
    {"aftsup",       (DL_FUNC) &aftsup,       16},
    {"d_loglik_ph",  (DL_FUNC) &d_loglik_ph,  12},
    {"d2_loglik_ph", (DL_FUNC) &d2_loglik_ph, 12},
    {"expsup",       (DL_FUNC) &expsup,       22},
    {"frail_ml",     (DL_FUNC) &frail_ml,     27},
    {"glmm_boot",    (DL_FUNC) &glmm_boot,    24},
    {"glmm_boot0",   (DL_FUNC) &glmm_boot0,   16},
    {"glmm_ml",      (DL_FUNC) &glmm_ml,      32},
    {"loglik_ph",    (DL_FUNC) &loglik_ph,    12},
    {"phexpsup",     (DL_FUNC) &phexpsup,     25},
    {"phsup",        (DL_FUNC) &phsup,        26},
    {"risk_get",     (DL_FUNC) &risk_get,     15},
    {"sizes",        (DL_FUNC) &sizes,        11},
    {"sup",          (DL_FUNC) &sup,          30},
    {"weibsup",      (DL_FUNC) &weibsup,      25},
    {NULL, NULL, 0}
};

static const R_FortranMethodDef FortranEntries[] = {
/*    {"bootcox",    (DL_FUNC) &F77_NAME(bootcox),    32}, */
    {"chek",       (DL_FUNC) &F77_NAME(chek),        8},
    {"cleanup",    (DL_FUNC) &F77_NAME(cleanup),    15},
    {"geomsup",    (DL_FUNC) &F77_NAME(geomsup),    27},
    {"ghq",        (DL_FUNC) &F77_NAME(ghq),         4},
    {"hazards",    (DL_FUNC) &F77_NAME(hazards),    10},
    {"martres",    (DL_FUNC) &F77_NAME(martres),    11},
/*    {"phfuncnull", (DL_FUNC) &F77_NAME(phfuncnull), 13}, */
    {"split",      (DL_FUNC) &F77_NAME(split),      10},
    {"wfunc",      (DL_FUNC) &F77_NAME(wfunc),      16},
    {"wfuncnull",  (DL_FUNC) &F77_NAME(wfuncnull),  13},
    {NULL, NULL, 0}
};

void R_init_eha(DllInfo *dll)
{
    R_registerRoutines(dll, CEntries, NULL, FortranEntries, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
